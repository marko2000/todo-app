[{"C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\index.js":"1","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\App.js":"2","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\Components\\List.jsx":"3","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\hooks\\UseLocalStorage.jsx":"4","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\Components\\Form.jsx":"5","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\Components\\Item.jsx":"6"},{"size":203,"mtime":1612278837503,"results":"7","hashOfConfig":"8"},{"size":1078,"mtime":1612278819397,"results":"9","hashOfConfig":"8"},{"size":506,"mtime":1612278960832,"results":"10","hashOfConfig":"8"},{"size":1433,"mtime":1612278899602,"results":"11","hashOfConfig":"8"},{"size":2731,"mtime":1612278928445,"results":"12","hashOfConfig":"8"},{"size":1321,"mtime":1612278945477,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bpef1h",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\index.js",[],["30","31"],"C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\App.js",["32","33"],"import React, { Component, useState, useEffect } from 'react';\nimport Form from \"./Components/Form.jsx\";\nimport List from \"./Components/List.jsx\";\nimport useLocalStorage from \"./hooks/UseLocalStorage.jsx\"\nimport \"./App.css\";\n\n\nconst App = () => {\n\n    // Stanja sa useState\n    const [input, setInput] = useState(\"\");\n    // const [todos, setTodos] = useState([]);\n    const [todos, setTodos] = useLocalStorage(\"todos\", []);\n    const [filter, setFilter] = useState([\"all\"]);\n    const [filteredItems, setFilteredItems] = useState([todos]);\n\n    return (<div>\n        <h4 > Todo Aplikacija </h4>\n        <Form filteredItems={filteredItems}\n            setFilteredItems={setFilteredItems}\n            filter={filter}\n            setFilter={setFilter}\n            input={input}\n            setTodos={setTodos}\n            todos={todos}\n            setInput={setInput}\n        />\n        <List filteredItems={filteredItems}\n            setFilteredItems={setFilteredItems}\n            todos={todos}\n            setTodos={setTodos}\n        />\n    </div>\n    );\n}\n\nexport default App;","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\Components\\List.jsx",[],"C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\hooks\\UseLocalStorage.jsx",[],"C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\Components\\Form.jsx",["34","35"],"import React, { Component, useEffect } from 'react';\r\n// instaliran dodatan paket za generisanje id-jeva, i preko f-je nextId() generisemo novi id\r\nimport nextId from \"react-id-generator\";\r\n\r\nconst Form = ({ filter, setFilter, setFilteredItems, input, todos, setTodos, setInput }) => {\r\n\r\n    useEffect(() => {\r\n        handleFilter();\r\n    }, [filter, todos])\r\n\r\n    const inputHandler = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleNewTodo = (e) => {\r\n        e.preventDefault();\r\n        setInput(input);\r\n        input !== \"\"\r\n            ? setTodos([...todos, { todoInfo: input, done: false, id: nextId(), importance: \"standard\" }])\r\n            : alert(\"Ne može se napraviti todo od praznog unosa\");\r\n        // sad praznimo polje za unos\r\n        setInput(\"\");\r\n    }\r\n\r\n    const handleFilter = (ev) => {\r\n        switch (filter) {\r\n            case \"done\":\r\n                setFilteredItems(todos.filter(el => el.done));\r\n                break;\r\n            case \"undone\":\r\n                setFilteredItems(todos.filter(el => !el.done));\r\n                break;\r\n            default:\r\n                setFilteredItems(todos);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleChangeFilter = (ev) => {\r\n        setFilter(ev.target.value);\r\n    }\r\n    const enterPressed = (ev) => {\r\n        let code = ev.keyCode || ev.which;\r\n        if (code === 13) handleNewTodo();\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-container\">\r\n                <div className=\"form-container1\">\r\n                    {/* dodavanjem value={input} mi obezbedjujemo da kad god se stanje inputa promeni\r\n            nakon ponovnog renderovanja value bude jednako inputu koji smo setovali na \"\" */}\r\n                    <input value={input} onChange={inputHandler} type=\"text\" className=\"todo-input\" placeholder=\"Unesite Vaš zadatak:\" />\r\n                    <button onKeyPress={enterPressed} onClick={handleNewTodo} className=\"todo-button\" type=\"submit\">\r\n                        {/* ovo menjamo kasnije */}\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"form-container2\">\r\n                    <div className=\"select\">\r\n                        <select onChange={handleChangeFilter} name=\"todos\" className=\"filter-todo\">\r\n                            <option value=\"all\">Svi</option>\r\n                            <option value=\"done\">Završeni</option>\r\n                            <option value=\"undone\">Nezavršeni</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","C:\\Users\\MISHONI\\Desktop\\todo-app-marko\\src\\Components\\Item.jsx",["36","37"],"// import React, { Component } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Item = ({ info, todo, todos, setTodos }) => {\r\n\r\n    const handleDelete = () => {\r\n        setTodos(todos.filter((elem) => elem.id !== todo.id))\r\n    }\r\n\r\n    const handleToggleStatus = () => {\r\n        // ovde treba da odradimo dodavanje i uklanjanje klase\r\n        // ta klasa treba da precrta odredjenu todo stavku\r\n        setTodos(todos.map(el => {\r\n            if (el.id === todo.id) {\r\n                return {\r\n                    // ovo je destrukturisanje objekta prvo, i onda menjamo jedan property\r\n                    ...el, done: !el.done\r\n                    // trebalo bi kad se promeni ovaj atribut na osnovu toga da povlaci odgovarajucu klasu iz css\r\n                }\r\n            }\r\n            return el;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"item\">\r\n            <span className={`${todo.done ? \"done\" : \"\"}`}>{info}</span>\r\n            <div className=\"confirmed\">\r\n                <button onClick={handleToggleStatus} className=\"btn-check\"><i className=\"fas fa-check\"></i></button>\r\n                <button onClick={handleDelete} className=\"btn-delete\"><i className=\"fas fa-trash-alt\"></i></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":1,"column":38,"nodeType":"44","messageId":"45","endLine":1,"endColumn":47},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"48","line":9,"column":8,"nodeType":"49","endLine":9,"endColumn":23,"suggestions":"50"},{"ruleId":"42","severity":1,"message":"51","line":2,"column":17,"nodeType":"44","messageId":"45","endLine":2,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":36},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.","ArrayExpression",["54"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [filter, handleFilter, todos]",{"range":"57","text":"58"},[344,359],"[filter, handleFilter, todos]"]